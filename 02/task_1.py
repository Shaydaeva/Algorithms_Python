"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


# базовый случай operation == '0'
def calc_recursion():
    """Рекурсия"""
    operation = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if operation == '0':
        return
    else:
        number_1 = input('Введите первое число: ')
        number_2 = input('Введите второе число: ')
        if operation not in ['+', '-', '*', '/', '0']:
            print('Введены некорректные значения.')
        else:
            try:
                number_1 = int(number_1)
                number_2 = int(number_2)
            except ValueError:
                print('Введены некорректные значения.')
            else:
                if operation == '+':
                    print(number_1 + number_2)
                elif operation == '-':
                    print(number_1 - number_2)
                elif operation == '*':
                    print(number_1 * number_2)
                elif operation == '/':
                    try:
                        print(number_1 / number_2)
                    except ZeroDivisionError:
                        print("Деление на ноль невозможно")
        calc()


calc_recursion()

# --------------------------------------------------------------------


def calc_cycle():
    """Цикл"""
    operation = ''
    while operation != '0':
        operation = input('Введите операцию (+, -, *, / или 0 для выхода): ')
        number_1 = input('Введите первое число: ')
        number_2 = input('Введите второе число: ')
        if operation not in ['+', '-', '*', '/', '0']:
            print('Введены некорректные значения.')
        else:
            try:
                number_1 = int(number_1)
                number_2 = int(number_2)
            except ValueError:
                print('Введены некорректные значения.')
            else:
                if operation == '+':
                    print(number_1 + number_2)
                elif operation == '-':
                    print(number_1 - number_2)
                elif operation == '*':
                    print(number_1 * number_2)
                elif operation == '/':
                    try:
                        print(number_1 / number_2)
                    except ZeroDivisionError:
                        print("Деление на ноль невозможно")


calc_cycle()
