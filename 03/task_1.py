"""
Задание 1.

Докажите, что словари обрабатываются быстрее, чем списки.

Реализуйте две функции, в первой нужно заполнить элементами список, во второй-словарь
Сделайте замеры времени выполнения каждой из функций

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор и пусть она считает время
И примените ее к двум своим функциям.
"""

import time


def check_time(func):
    def decor(n):
        start_val = time.time()
        func(n)
        end_val = time.time()
        return end_val - start_val
    return decor


@check_time
def fill_lst(n):
    lst = []
    for i in range(1, n):
        lst.append(i)
    return lst


@check_time
def fill_dict(n):
    d = {}
    for i in range(1, n):
        d[i] = i
    return d


print(fill_lst(1000001))
print(fill_dict(1000001))

# for el, i in enumerate(range(1, 10)):
#     print(i, el)

"""
Наполнение словаря и списка в том виде, что представлен у меня,
отрабатывает примерно за одинаковое время, но в словарь помещается
в два раза больше значений.
Отсюда вопрос, может я не правильно поняла задание?
"""
